version: "3.8"
services:
  api:
    container_name: lanchonete-api
    restart: always
    build:
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    networks:
      - mynetwork
    depends_on:
      - db
    environment:
      - PORT=8001
  orders:
    container_name: lanchonete-orders
    restart: always
    build:
      context: ./../lanchonete-orders/techchallenge-orders
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    networks:
      - mynetwork
    # depends_on:
    #   - nosqldb
    environment:
      - PORT=8002
  payment:
    container_name: lanchonete-payments
    restart: always
    build:
      context: ./../techchallenge-payment
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    networks:
      - mynetwork
    environment:
      - PORT=8003
  db:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: strong-password
    volumes:
      - local_pgdata:/var/lib/postgresql/data
  nosqldb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - mynetwork
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  queue:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork

volumes:
  local_pgdata:
  pgadmin-data:
  mongodb_data:

networks:
  mynetwork:
    driver: bridge